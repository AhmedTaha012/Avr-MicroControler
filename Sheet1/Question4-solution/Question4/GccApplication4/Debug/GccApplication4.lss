
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000057c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000057c  000005f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005fc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000062c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000668  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006ab  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005bb  00000000  00000000  00000d4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002fc  00000000  00000000  00001306  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001604  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035b  00000000  00000000  000016a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e2  00000000  00000000  00001a03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001be5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	25 c0       	rjmp	.+74     	; 0x4e <__vector_1>
   4:	3d c0       	rjmp	.+122    	; 0x80 <__vector_2>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec e7       	ldi	r30, 0x7C	; 124
  3a:	f5 e0       	ldi	r31, 0x05	; 5
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ac 36       	cpi	r26, 0x6C	; 108
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	95 d0       	rcall	.+298    	; 0x174 <main>
  4a:	96 c2       	rjmp	.+1324   	; 0x578 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <__vector_1>:
			_delay_ms(300);
		}
		
    }
}
ISR(INT0_vect){
  4e:	1f 92       	push	r1
  50:	0f 92       	push	r0
  52:	0f b6       	in	r0, 0x3f	; 63
  54:	0f 92       	push	r0
  56:	11 24       	eor	r1, r1
  58:	8f 93       	push	r24
  5a:	9f 93       	push	r25
	cli();
  5c:	f8 94       	cli
	count++;
  5e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <count>
  62:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <count+0x1>
  66:	01 96       	adiw	r24, 0x01	; 1
  68:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <count+0x1>
  6c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <count>
	sei();
  70:	78 94       	sei
}
  72:	9f 91       	pop	r25
  74:	8f 91       	pop	r24
  76:	0f 90       	pop	r0
  78:	0f be       	out	0x3f, r0	; 63
  7a:	0f 90       	pop	r0
  7c:	1f 90       	pop	r1
  7e:	18 95       	reti

00000080 <__vector_2>:
ISR(INT1_vect){
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	8f 93       	push	r24
  8c:	9f 93       	push	r25
	cli();
  8e:	f8 94       	cli
	count--;
  90:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <count>
  94:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <count+0x1>
  98:	01 97       	sbiw	r24, 0x01	; 1
  9a:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <count+0x1>
  9e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <count>
	sei();
  a2:	78 94       	sei
}
  a4:	9f 91       	pop	r25
  a6:	8f 91       	pop	r24
  a8:	0f 90       	pop	r0
  aa:	0f be       	out	0x3f, r0	; 63
  ac:	0f 90       	pop	r0
  ae:	1f 90       	pop	r1
  b0:	18 95       	reti

000000b2 <display_Count>:
void display_Count(int x){
  b2:	8f 92       	push	r8
  b4:	9f 92       	push	r9
  b6:	af 92       	push	r10
  b8:	bf 92       	push	r11
  ba:	cf 92       	push	r12
  bc:	df 92       	push	r13
  be:	ef 92       	push	r14
  c0:	ff 92       	push	r15
	  float num=x/10; ///15/10=1.5 //1.5-1=0.5
  c2:	6a e0       	ldi	r22, 0x0A	; 10
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	31 d2       	rcall	.+1122   	; 0x52a <__divmodhi4>
  c8:	07 2e       	mov	r0, r23
  ca:	00 0c       	add	r0, r0
  cc:	88 0b       	sbc	r24, r24
  ce:	99 0b       	sbc	r25, r25
  d0:	15 d1       	rcall	.+554    	; 0x2fc <__floatsisf>
  d2:	6b 01       	movw	r12, r22
  d4:	7c 01       	movw	r14, r24
	  int new_num;
	  if(num==1){PORTC=arr[1];PORTB=arr[0]; return;}
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	40 e8       	ldi	r20, 0x80	; 128
  dc:	5f e3       	ldi	r21, 0x3F	; 63
  de:	d7 d0       	rcall	.+430    	; 0x28e <__cmpsf2>
  e0:	81 11       	cpse	r24, r1
  e2:	07 c0       	rjmp	.+14     	; 0xf2 <display_Count+0x40>
  e4:	e0 e6       	ldi	r30, 0x60	; 96
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	81 81       	ldd	r24, Z+1	; 0x01
  ea:	85 bb       	out	0x15, r24	; 21
  ec:	80 81       	ld	r24, Z
  ee:	88 bb       	out	0x18, r24	; 24
  f0:	38 c0       	rjmp	.+112    	; 0x162 <display_Count+0xb0>
		if((num-1)>0){ //1.5-1=0.5
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e8       	ldi	r20, 0x80	; 128
  f8:	5f e3       	ldi	r21, 0x3F	; 63
  fa:	c7 01       	movw	r24, r14
  fc:	b6 01       	movw	r22, r12
  fe:	62 d0       	rcall	.+196    	; 0x1c4 <__subsf3>
 100:	4b 01       	movw	r8, r22
 102:	5c 01       	movw	r10, r24
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	a9 01       	movw	r20, r18
 10a:	a8 d1       	rcall	.+848    	; 0x45c <__gesf2>
 10c:	18 16       	cp	r1, r24
 10e:	8c f4       	brge	.+34     	; 0x132 <display_Count+0x80>
			PORTC=arr[1];
 110:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 114:	85 bb       	out	0x15, r24	; 21
			new_num=(int)((num-1)*10);
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	40 e2       	ldi	r20, 0x20	; 32
 11c:	51 e4       	ldi	r21, 0x41	; 65
 11e:	c5 01       	movw	r24, r10
 120:	b4 01       	movw	r22, r8
 122:	a0 d1       	rcall	.+832    	; 0x464 <__mulsf3>
 124:	b8 d0       	rcall	.+368    	; 0x296 <__fixsfsi>
			PORTB=arr[new_num];//arr[5]
 126:	fb 01       	movw	r30, r22
 128:	e0 5a       	subi	r30, 0xA0	; 160
 12a:	ff 4f       	sbci	r31, 0xFF	; 255
 12c:	80 81       	ld	r24, Z
 12e:	88 bb       	out	0x18, r24	; 24
 130:	18 c0       	rjmp	.+48     	; 0x162 <display_Count+0xb0>
		}
		else if((num-1)<0){
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	a9 01       	movw	r20, r18
 138:	c5 01       	movw	r24, r10
 13a:	b4 01       	movw	r22, r8
 13c:	a8 d0       	rcall	.+336    	; 0x28e <__cmpsf2>
 13e:	88 23       	and	r24, r24
 140:	84 f4       	brge	.+32     	; 0x162 <display_Count+0xb0>
				PORTC=arr[0];
 142:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 146:	85 bb       	out	0x15, r24	; 21
				new_num=(num*10);
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e2       	ldi	r20, 0x20	; 32
 14e:	51 e4       	ldi	r21, 0x41	; 65
 150:	c7 01       	movw	r24, r14
 152:	b6 01       	movw	r22, r12
 154:	87 d1       	rcall	.+782    	; 0x464 <__mulsf3>
 156:	9f d0       	rcall	.+318    	; 0x296 <__fixsfsi>
				PORTB=arr[new_num];
 158:	fb 01       	movw	r30, r22
 15a:	e0 5a       	subi	r30, 0xA0	; 160
 15c:	ff 4f       	sbci	r31, 0xFF	; 255
 15e:	80 81       	ld	r24, Z
 160:	88 bb       	out	0x18, r24	; 24
		}
			
		  
	  
	  
}
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	df 90       	pop	r13
 168:	cf 90       	pop	r12
 16a:	bf 90       	pop	r11
 16c:	af 90       	pop	r10
 16e:	9f 90       	pop	r9
 170:	8f 90       	pop	r8
 172:	08 95       	ret

00000174 <main>:
void display_Count(int x);
int main(void)
{
    /* Replace with your application code */
	
	DDRB=0xff;
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	87 bb       	out	0x17, r24	; 23
	DDRC=0xff;
 178:	84 bb       	out	0x14, r24	; 20
	MCUCR&=~(1<<ISC00);
 17a:	85 b7       	in	r24, 0x35	; 53
 17c:	8e 7f       	andi	r24, 0xFE	; 254
 17e:	85 bf       	out	0x35, r24	; 53
	MCUCR|=(1<<ISC01);
 180:	85 b7       	in	r24, 0x35	; 53
 182:	82 60       	ori	r24, 0x02	; 2
 184:	85 bf       	out	0x35, r24	; 53
	MCUCR&=~(1<<ISC10);
 186:	85 b7       	in	r24, 0x35	; 53
 188:	8b 7f       	andi	r24, 0xFB	; 251
 18a:	85 bf       	out	0x35, r24	; 53
	MCUCR|=(1<<ISC11);
 18c:	85 b7       	in	r24, 0x35	; 53
 18e:	88 60       	ori	r24, 0x08	; 8
 190:	85 bf       	out	0x35, r24	; 53
	GICR|=(1<<INT0);
 192:	8b b7       	in	r24, 0x3b	; 59
 194:	80 64       	ori	r24, 0x40	; 64
 196:	8b bf       	out	0x3b, r24	; 59
	GICR|=(1<<INT1);
 198:	8b b7       	in	r24, 0x3b	; 59
 19a:	80 68       	ori	r24, 0x80	; 128
 19c:	8b bf       	out	0x3b, r24	; 59
	sei();
 19e:	78 94       	sei
	char arr2[2];
	int num1=0,num2=0;
    while (1) 
    {
		for (uint8_t i=0; i<15;i++)
 1a0:	c0 e0       	ldi	r28, 0x00	; 0
 1a2:	0d c0       	rjmp	.+26     	; 0x1be <main+0x4a>
		{
			display_Count(i);
 1a4:	8c 2f       	mov	r24, r28
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	84 df       	rcall	.-248    	; 0xb2 <display_Count>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1aa:	2f e5       	ldi	r18, 0x5F	; 95
 1ac:	8a ee       	ldi	r24, 0xEA	; 234
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	80 40       	sbci	r24, 0x00	; 0
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x3c>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x46>
 1ba:	00 00       	nop
	sei();
	char arr2[2];
	int num1=0,num2=0;
    while (1) 
    {
		for (uint8_t i=0; i<15;i++)
 1bc:	cf 5f       	subi	r28, 0xFF	; 255
 1be:	cf 30       	cpi	r28, 0x0F	; 15
 1c0:	88 f3       	brcs	.-30     	; 0x1a4 <main+0x30>
 1c2:	ee cf       	rjmp	.-36     	; 0x1a0 <main+0x2c>

000001c4 <__subsf3>:
 1c4:	50 58       	subi	r21, 0x80	; 128

000001c6 <__addsf3>:
 1c6:	bb 27       	eor	r27, r27
 1c8:	aa 27       	eor	r26, r26
 1ca:	0e d0       	rcall	.+28     	; 0x1e8 <__addsf3x>
 1cc:	0d c1       	rjmp	.+538    	; 0x3e8 <__fp_round>
 1ce:	fe d0       	rcall	.+508    	; 0x3cc <__fp_pscA>
 1d0:	30 f0       	brcs	.+12     	; 0x1de <__addsf3+0x18>
 1d2:	03 d1       	rcall	.+518    	; 0x3da <__fp_pscB>
 1d4:	20 f0       	brcs	.+8      	; 0x1de <__addsf3+0x18>
 1d6:	31 f4       	brne	.+12     	; 0x1e4 <__addsf3+0x1e>
 1d8:	9f 3f       	cpi	r25, 0xFF	; 255
 1da:	11 f4       	brne	.+4      	; 0x1e0 <__addsf3+0x1a>
 1dc:	1e f4       	brtc	.+6      	; 0x1e4 <__addsf3+0x1e>
 1de:	f3 c0       	rjmp	.+486    	; 0x3c6 <__fp_nan>
 1e0:	0e f4       	brtc	.+2      	; 0x1e4 <__addsf3+0x1e>
 1e2:	e0 95       	com	r30
 1e4:	e7 fb       	bst	r30, 7
 1e6:	e9 c0       	rjmp	.+466    	; 0x3ba <__fp_inf>

000001e8 <__addsf3x>:
 1e8:	e9 2f       	mov	r30, r25
 1ea:	0f d1       	rcall	.+542    	; 0x40a <__fp_split3>
 1ec:	80 f3       	brcs	.-32     	; 0x1ce <__addsf3+0x8>
 1ee:	ba 17       	cp	r27, r26
 1f0:	62 07       	cpc	r22, r18
 1f2:	73 07       	cpc	r23, r19
 1f4:	84 07       	cpc	r24, r20
 1f6:	95 07       	cpc	r25, r21
 1f8:	18 f0       	brcs	.+6      	; 0x200 <__EEPROM_REGION_LENGTH__>
 1fa:	71 f4       	brne	.+28     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
 1fc:	9e f5       	brtc	.+102    	; 0x264 <__EEPROM_REGION_LENGTH__+0x64>
 1fe:	27 c1       	rjmp	.+590    	; 0x44e <__fp_zero>
 200:	0e f4       	brtc	.+2      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 202:	e0 95       	com	r30
 204:	0b 2e       	mov	r0, r27
 206:	ba 2f       	mov	r27, r26
 208:	a0 2d       	mov	r26, r0
 20a:	0b 01       	movw	r0, r22
 20c:	b9 01       	movw	r22, r18
 20e:	90 01       	movw	r18, r0
 210:	0c 01       	movw	r0, r24
 212:	ca 01       	movw	r24, r20
 214:	a0 01       	movw	r20, r0
 216:	11 24       	eor	r1, r1
 218:	ff 27       	eor	r31, r31
 21a:	59 1b       	sub	r21, r25
 21c:	99 f0       	breq	.+38     	; 0x244 <__EEPROM_REGION_LENGTH__+0x44>
 21e:	59 3f       	cpi	r21, 0xF9	; 249
 220:	50 f4       	brcc	.+20     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
 222:	50 3e       	cpi	r21, 0xE0	; 224
 224:	68 f1       	brcs	.+90     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
 226:	1a 16       	cp	r1, r26
 228:	f0 40       	sbci	r31, 0x00	; 0
 22a:	a2 2f       	mov	r26, r18
 22c:	23 2f       	mov	r18, r19
 22e:	34 2f       	mov	r19, r20
 230:	44 27       	eor	r20, r20
 232:	58 5f       	subi	r21, 0xF8	; 248
 234:	f3 cf       	rjmp	.-26     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
 236:	46 95       	lsr	r20
 238:	37 95       	ror	r19
 23a:	27 95       	ror	r18
 23c:	a7 95       	ror	r26
 23e:	f0 40       	sbci	r31, 0x00	; 0
 240:	53 95       	inc	r21
 242:	c9 f7       	brne	.-14     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
 244:	7e f4       	brtc	.+30     	; 0x264 <__EEPROM_REGION_LENGTH__+0x64>
 246:	1f 16       	cp	r1, r31
 248:	ba 0b       	sbc	r27, r26
 24a:	62 0b       	sbc	r22, r18
 24c:	73 0b       	sbc	r23, r19
 24e:	84 0b       	sbc	r24, r20
 250:	ba f0       	brmi	.+46     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
 252:	91 50       	subi	r25, 0x01	; 1
 254:	a1 f0       	breq	.+40     	; 0x27e <__EEPROM_REGION_LENGTH__+0x7e>
 256:	ff 0f       	add	r31, r31
 258:	bb 1f       	adc	r27, r27
 25a:	66 1f       	adc	r22, r22
 25c:	77 1f       	adc	r23, r23
 25e:	88 1f       	adc	r24, r24
 260:	c2 f7       	brpl	.-16     	; 0x252 <__EEPROM_REGION_LENGTH__+0x52>
 262:	0e c0       	rjmp	.+28     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
 264:	ba 0f       	add	r27, r26
 266:	62 1f       	adc	r22, r18
 268:	73 1f       	adc	r23, r19
 26a:	84 1f       	adc	r24, r20
 26c:	48 f4       	brcc	.+18     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
 26e:	87 95       	ror	r24
 270:	77 95       	ror	r23
 272:	67 95       	ror	r22
 274:	b7 95       	ror	r27
 276:	f7 95       	ror	r31
 278:	9e 3f       	cpi	r25, 0xFE	; 254
 27a:	08 f0       	brcs	.+2      	; 0x27e <__EEPROM_REGION_LENGTH__+0x7e>
 27c:	b3 cf       	rjmp	.-154    	; 0x1e4 <__addsf3+0x1e>
 27e:	93 95       	inc	r25
 280:	88 0f       	add	r24, r24
 282:	08 f0       	brcs	.+2      	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 284:	99 27       	eor	r25, r25
 286:	ee 0f       	add	r30, r30
 288:	97 95       	ror	r25
 28a:	87 95       	ror	r24
 28c:	08 95       	ret

0000028e <__cmpsf2>:
 28e:	71 d0       	rcall	.+226    	; 0x372 <__fp_cmp>
 290:	08 f4       	brcc	.+2      	; 0x294 <__cmpsf2+0x6>
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	08 95       	ret

00000296 <__fixsfsi>:
 296:	04 d0       	rcall	.+8      	; 0x2a0 <__fixunssfsi>
 298:	68 94       	set
 29a:	b1 11       	cpse	r27, r1
 29c:	d9 c0       	rjmp	.+434    	; 0x450 <__fp_szero>
 29e:	08 95       	ret

000002a0 <__fixunssfsi>:
 2a0:	bc d0       	rcall	.+376    	; 0x41a <__fp_splitA>
 2a2:	88 f0       	brcs	.+34     	; 0x2c6 <__fixunssfsi+0x26>
 2a4:	9f 57       	subi	r25, 0x7F	; 127
 2a6:	90 f0       	brcs	.+36     	; 0x2cc <__fixunssfsi+0x2c>
 2a8:	b9 2f       	mov	r27, r25
 2aa:	99 27       	eor	r25, r25
 2ac:	b7 51       	subi	r27, 0x17	; 23
 2ae:	a0 f0       	brcs	.+40     	; 0x2d8 <__fixunssfsi+0x38>
 2b0:	d1 f0       	breq	.+52     	; 0x2e6 <__fixunssfsi+0x46>
 2b2:	66 0f       	add	r22, r22
 2b4:	77 1f       	adc	r23, r23
 2b6:	88 1f       	adc	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	1a f0       	brmi	.+6      	; 0x2c2 <__fixunssfsi+0x22>
 2bc:	ba 95       	dec	r27
 2be:	c9 f7       	brne	.-14     	; 0x2b2 <__fixunssfsi+0x12>
 2c0:	12 c0       	rjmp	.+36     	; 0x2e6 <__fixunssfsi+0x46>
 2c2:	b1 30       	cpi	r27, 0x01	; 1
 2c4:	81 f0       	breq	.+32     	; 0x2e6 <__fixunssfsi+0x46>
 2c6:	c3 d0       	rcall	.+390    	; 0x44e <__fp_zero>
 2c8:	b1 e0       	ldi	r27, 0x01	; 1
 2ca:	08 95       	ret
 2cc:	c0 c0       	rjmp	.+384    	; 0x44e <__fp_zero>
 2ce:	67 2f       	mov	r22, r23
 2d0:	78 2f       	mov	r23, r24
 2d2:	88 27       	eor	r24, r24
 2d4:	b8 5f       	subi	r27, 0xF8	; 248
 2d6:	39 f0       	breq	.+14     	; 0x2e6 <__fixunssfsi+0x46>
 2d8:	b9 3f       	cpi	r27, 0xF9	; 249
 2da:	cc f3       	brlt	.-14     	; 0x2ce <__fixunssfsi+0x2e>
 2dc:	86 95       	lsr	r24
 2de:	77 95       	ror	r23
 2e0:	67 95       	ror	r22
 2e2:	b3 95       	inc	r27
 2e4:	d9 f7       	brne	.-10     	; 0x2dc <__fixunssfsi+0x3c>
 2e6:	3e f4       	brtc	.+14     	; 0x2f6 <__fixunssfsi+0x56>
 2e8:	90 95       	com	r25
 2ea:	80 95       	com	r24
 2ec:	70 95       	com	r23
 2ee:	61 95       	neg	r22
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	8f 4f       	sbci	r24, 0xFF	; 255
 2f4:	9f 4f       	sbci	r25, 0xFF	; 255
 2f6:	08 95       	ret

000002f8 <__floatunsisf>:
 2f8:	e8 94       	clt
 2fa:	09 c0       	rjmp	.+18     	; 0x30e <__floatsisf+0x12>

000002fc <__floatsisf>:
 2fc:	97 fb       	bst	r25, 7
 2fe:	3e f4       	brtc	.+14     	; 0x30e <__floatsisf+0x12>
 300:	90 95       	com	r25
 302:	80 95       	com	r24
 304:	70 95       	com	r23
 306:	61 95       	neg	r22
 308:	7f 4f       	sbci	r23, 0xFF	; 255
 30a:	8f 4f       	sbci	r24, 0xFF	; 255
 30c:	9f 4f       	sbci	r25, 0xFF	; 255
 30e:	99 23       	and	r25, r25
 310:	a9 f0       	breq	.+42     	; 0x33c <__floatsisf+0x40>
 312:	f9 2f       	mov	r31, r25
 314:	96 e9       	ldi	r25, 0x96	; 150
 316:	bb 27       	eor	r27, r27
 318:	93 95       	inc	r25
 31a:	f6 95       	lsr	r31
 31c:	87 95       	ror	r24
 31e:	77 95       	ror	r23
 320:	67 95       	ror	r22
 322:	b7 95       	ror	r27
 324:	f1 11       	cpse	r31, r1
 326:	f8 cf       	rjmp	.-16     	; 0x318 <__floatsisf+0x1c>
 328:	fa f4       	brpl	.+62     	; 0x368 <__floatsisf+0x6c>
 32a:	bb 0f       	add	r27, r27
 32c:	11 f4       	brne	.+4      	; 0x332 <__floatsisf+0x36>
 32e:	60 ff       	sbrs	r22, 0
 330:	1b c0       	rjmp	.+54     	; 0x368 <__floatsisf+0x6c>
 332:	6f 5f       	subi	r22, 0xFF	; 255
 334:	7f 4f       	sbci	r23, 0xFF	; 255
 336:	8f 4f       	sbci	r24, 0xFF	; 255
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	16 c0       	rjmp	.+44     	; 0x368 <__floatsisf+0x6c>
 33c:	88 23       	and	r24, r24
 33e:	11 f0       	breq	.+4      	; 0x344 <__floatsisf+0x48>
 340:	96 e9       	ldi	r25, 0x96	; 150
 342:	11 c0       	rjmp	.+34     	; 0x366 <__floatsisf+0x6a>
 344:	77 23       	and	r23, r23
 346:	21 f0       	breq	.+8      	; 0x350 <__floatsisf+0x54>
 348:	9e e8       	ldi	r25, 0x8E	; 142
 34a:	87 2f       	mov	r24, r23
 34c:	76 2f       	mov	r23, r22
 34e:	05 c0       	rjmp	.+10     	; 0x35a <__floatsisf+0x5e>
 350:	66 23       	and	r22, r22
 352:	71 f0       	breq	.+28     	; 0x370 <__floatsisf+0x74>
 354:	96 e8       	ldi	r25, 0x86	; 134
 356:	86 2f       	mov	r24, r22
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	2a f0       	brmi	.+10     	; 0x368 <__floatsisf+0x6c>
 35e:	9a 95       	dec	r25
 360:	66 0f       	add	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	da f7       	brpl	.-10     	; 0x35e <__floatsisf+0x62>
 368:	88 0f       	add	r24, r24
 36a:	96 95       	lsr	r25
 36c:	87 95       	ror	r24
 36e:	97 f9       	bld	r25, 7
 370:	08 95       	ret

00000372 <__fp_cmp>:
 372:	99 0f       	add	r25, r25
 374:	00 08       	sbc	r0, r0
 376:	55 0f       	add	r21, r21
 378:	aa 0b       	sbc	r26, r26
 37a:	e0 e8       	ldi	r30, 0x80	; 128
 37c:	fe ef       	ldi	r31, 0xFE	; 254
 37e:	16 16       	cp	r1, r22
 380:	17 06       	cpc	r1, r23
 382:	e8 07       	cpc	r30, r24
 384:	f9 07       	cpc	r31, r25
 386:	c0 f0       	brcs	.+48     	; 0x3b8 <__fp_cmp+0x46>
 388:	12 16       	cp	r1, r18
 38a:	13 06       	cpc	r1, r19
 38c:	e4 07       	cpc	r30, r20
 38e:	f5 07       	cpc	r31, r21
 390:	98 f0       	brcs	.+38     	; 0x3b8 <__fp_cmp+0x46>
 392:	62 1b       	sub	r22, r18
 394:	73 0b       	sbc	r23, r19
 396:	84 0b       	sbc	r24, r20
 398:	95 0b       	sbc	r25, r21
 39a:	39 f4       	brne	.+14     	; 0x3aa <__fp_cmp+0x38>
 39c:	0a 26       	eor	r0, r26
 39e:	61 f0       	breq	.+24     	; 0x3b8 <__fp_cmp+0x46>
 3a0:	23 2b       	or	r18, r19
 3a2:	24 2b       	or	r18, r20
 3a4:	25 2b       	or	r18, r21
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <__fp_cmp+0x3e>
 3a8:	08 95       	ret
 3aa:	0a 26       	eor	r0, r26
 3ac:	09 f4       	brne	.+2      	; 0x3b0 <__fp_cmp+0x3e>
 3ae:	a1 40       	sbci	r26, 0x01	; 1
 3b0:	a6 95       	lsr	r26
 3b2:	8f ef       	ldi	r24, 0xFF	; 255
 3b4:	81 1d       	adc	r24, r1
 3b6:	81 1d       	adc	r24, r1
 3b8:	08 95       	ret

000003ba <__fp_inf>:
 3ba:	97 f9       	bld	r25, 7
 3bc:	9f 67       	ori	r25, 0x7F	; 127
 3be:	80 e8       	ldi	r24, 0x80	; 128
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	08 95       	ret

000003c6 <__fp_nan>:
 3c6:	9f ef       	ldi	r25, 0xFF	; 255
 3c8:	80 ec       	ldi	r24, 0xC0	; 192
 3ca:	08 95       	ret

000003cc <__fp_pscA>:
 3cc:	00 24       	eor	r0, r0
 3ce:	0a 94       	dec	r0
 3d0:	16 16       	cp	r1, r22
 3d2:	17 06       	cpc	r1, r23
 3d4:	18 06       	cpc	r1, r24
 3d6:	09 06       	cpc	r0, r25
 3d8:	08 95       	ret

000003da <__fp_pscB>:
 3da:	00 24       	eor	r0, r0
 3dc:	0a 94       	dec	r0
 3de:	12 16       	cp	r1, r18
 3e0:	13 06       	cpc	r1, r19
 3e2:	14 06       	cpc	r1, r20
 3e4:	05 06       	cpc	r0, r21
 3e6:	08 95       	ret

000003e8 <__fp_round>:
 3e8:	09 2e       	mov	r0, r25
 3ea:	03 94       	inc	r0
 3ec:	00 0c       	add	r0, r0
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <__fp_round+0xc>
 3f0:	88 23       	and	r24, r24
 3f2:	52 f0       	brmi	.+20     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 3f4:	bb 0f       	add	r27, r27
 3f6:	40 f4       	brcc	.+16     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 3f8:	bf 2b       	or	r27, r31
 3fa:	11 f4       	brne	.+4      	; 0x400 <__DATA_REGION_LENGTH__>
 3fc:	60 ff       	sbrs	r22, 0
 3fe:	04 c0       	rjmp	.+8      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
 400:	6f 5f       	subi	r22, 0xFF	; 255
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	08 95       	ret

0000040a <__fp_split3>:
 40a:	57 fd       	sbrc	r21, 7
 40c:	90 58       	subi	r25, 0x80	; 128
 40e:	44 0f       	add	r20, r20
 410:	55 1f       	adc	r21, r21
 412:	59 f0       	breq	.+22     	; 0x42a <__fp_splitA+0x10>
 414:	5f 3f       	cpi	r21, 0xFF	; 255
 416:	71 f0       	breq	.+28     	; 0x434 <__fp_splitA+0x1a>
 418:	47 95       	ror	r20

0000041a <__fp_splitA>:
 41a:	88 0f       	add	r24, r24
 41c:	97 fb       	bst	r25, 7
 41e:	99 1f       	adc	r25, r25
 420:	61 f0       	breq	.+24     	; 0x43a <__fp_splitA+0x20>
 422:	9f 3f       	cpi	r25, 0xFF	; 255
 424:	79 f0       	breq	.+30     	; 0x444 <__fp_splitA+0x2a>
 426:	87 95       	ror	r24
 428:	08 95       	ret
 42a:	12 16       	cp	r1, r18
 42c:	13 06       	cpc	r1, r19
 42e:	14 06       	cpc	r1, r20
 430:	55 1f       	adc	r21, r21
 432:	f2 cf       	rjmp	.-28     	; 0x418 <__fp_split3+0xe>
 434:	46 95       	lsr	r20
 436:	f1 df       	rcall	.-30     	; 0x41a <__fp_splitA>
 438:	08 c0       	rjmp	.+16     	; 0x44a <__fp_splitA+0x30>
 43a:	16 16       	cp	r1, r22
 43c:	17 06       	cpc	r1, r23
 43e:	18 06       	cpc	r1, r24
 440:	99 1f       	adc	r25, r25
 442:	f1 cf       	rjmp	.-30     	; 0x426 <__fp_splitA+0xc>
 444:	86 95       	lsr	r24
 446:	71 05       	cpc	r23, r1
 448:	61 05       	cpc	r22, r1
 44a:	08 94       	sec
 44c:	08 95       	ret

0000044e <__fp_zero>:
 44e:	e8 94       	clt

00000450 <__fp_szero>:
 450:	bb 27       	eor	r27, r27
 452:	66 27       	eor	r22, r22
 454:	77 27       	eor	r23, r23
 456:	cb 01       	movw	r24, r22
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__gesf2>:
 45c:	8a df       	rcall	.-236    	; 0x372 <__fp_cmp>
 45e:	08 f4       	brcc	.+2      	; 0x462 <__stack+0x3>
 460:	8f ef       	ldi	r24, 0xFF	; 255
 462:	08 95       	ret

00000464 <__mulsf3>:
 464:	0b d0       	rcall	.+22     	; 0x47c <__mulsf3x>
 466:	c0 cf       	rjmp	.-128    	; 0x3e8 <__fp_round>
 468:	b1 df       	rcall	.-158    	; 0x3cc <__fp_pscA>
 46a:	28 f0       	brcs	.+10     	; 0x476 <__mulsf3+0x12>
 46c:	b6 df       	rcall	.-148    	; 0x3da <__fp_pscB>
 46e:	18 f0       	brcs	.+6      	; 0x476 <__mulsf3+0x12>
 470:	95 23       	and	r25, r21
 472:	09 f0       	breq	.+2      	; 0x476 <__mulsf3+0x12>
 474:	a2 cf       	rjmp	.-188    	; 0x3ba <__fp_inf>
 476:	a7 cf       	rjmp	.-178    	; 0x3c6 <__fp_nan>
 478:	11 24       	eor	r1, r1
 47a:	ea cf       	rjmp	.-44     	; 0x450 <__fp_szero>

0000047c <__mulsf3x>:
 47c:	c6 df       	rcall	.-116    	; 0x40a <__fp_split3>
 47e:	a0 f3       	brcs	.-24     	; 0x468 <__mulsf3+0x4>

00000480 <__mulsf3_pse>:
 480:	95 9f       	mul	r25, r21
 482:	d1 f3       	breq	.-12     	; 0x478 <__mulsf3+0x14>
 484:	95 0f       	add	r25, r21
 486:	50 e0       	ldi	r21, 0x00	; 0
 488:	55 1f       	adc	r21, r21
 48a:	62 9f       	mul	r22, r18
 48c:	f0 01       	movw	r30, r0
 48e:	72 9f       	mul	r23, r18
 490:	bb 27       	eor	r27, r27
 492:	f0 0d       	add	r31, r0
 494:	b1 1d       	adc	r27, r1
 496:	63 9f       	mul	r22, r19
 498:	aa 27       	eor	r26, r26
 49a:	f0 0d       	add	r31, r0
 49c:	b1 1d       	adc	r27, r1
 49e:	aa 1f       	adc	r26, r26
 4a0:	64 9f       	mul	r22, r20
 4a2:	66 27       	eor	r22, r22
 4a4:	b0 0d       	add	r27, r0
 4a6:	a1 1d       	adc	r26, r1
 4a8:	66 1f       	adc	r22, r22
 4aa:	82 9f       	mul	r24, r18
 4ac:	22 27       	eor	r18, r18
 4ae:	b0 0d       	add	r27, r0
 4b0:	a1 1d       	adc	r26, r1
 4b2:	62 1f       	adc	r22, r18
 4b4:	73 9f       	mul	r23, r19
 4b6:	b0 0d       	add	r27, r0
 4b8:	a1 1d       	adc	r26, r1
 4ba:	62 1f       	adc	r22, r18
 4bc:	83 9f       	mul	r24, r19
 4be:	a0 0d       	add	r26, r0
 4c0:	61 1d       	adc	r22, r1
 4c2:	22 1f       	adc	r18, r18
 4c4:	74 9f       	mul	r23, r20
 4c6:	33 27       	eor	r19, r19
 4c8:	a0 0d       	add	r26, r0
 4ca:	61 1d       	adc	r22, r1
 4cc:	23 1f       	adc	r18, r19
 4ce:	84 9f       	mul	r24, r20
 4d0:	60 0d       	add	r22, r0
 4d2:	21 1d       	adc	r18, r1
 4d4:	82 2f       	mov	r24, r18
 4d6:	76 2f       	mov	r23, r22
 4d8:	6a 2f       	mov	r22, r26
 4da:	11 24       	eor	r1, r1
 4dc:	9f 57       	subi	r25, 0x7F	; 127
 4de:	50 40       	sbci	r21, 0x00	; 0
 4e0:	8a f0       	brmi	.+34     	; 0x504 <__mulsf3_pse+0x84>
 4e2:	e1 f0       	breq	.+56     	; 0x51c <__mulsf3_pse+0x9c>
 4e4:	88 23       	and	r24, r24
 4e6:	4a f0       	brmi	.+18     	; 0x4fa <__mulsf3_pse+0x7a>
 4e8:	ee 0f       	add	r30, r30
 4ea:	ff 1f       	adc	r31, r31
 4ec:	bb 1f       	adc	r27, r27
 4ee:	66 1f       	adc	r22, r22
 4f0:	77 1f       	adc	r23, r23
 4f2:	88 1f       	adc	r24, r24
 4f4:	91 50       	subi	r25, 0x01	; 1
 4f6:	50 40       	sbci	r21, 0x00	; 0
 4f8:	a9 f7       	brne	.-22     	; 0x4e4 <__mulsf3_pse+0x64>
 4fa:	9e 3f       	cpi	r25, 0xFE	; 254
 4fc:	51 05       	cpc	r21, r1
 4fe:	70 f0       	brcs	.+28     	; 0x51c <__mulsf3_pse+0x9c>
 500:	5c cf       	rjmp	.-328    	; 0x3ba <__fp_inf>
 502:	a6 cf       	rjmp	.-180    	; 0x450 <__fp_szero>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	ec f3       	brlt	.-6      	; 0x502 <__mulsf3_pse+0x82>
 508:	98 3e       	cpi	r25, 0xE8	; 232
 50a:	dc f3       	brlt	.-10     	; 0x502 <__mulsf3_pse+0x82>
 50c:	86 95       	lsr	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b7 95       	ror	r27
 514:	f7 95       	ror	r31
 516:	e7 95       	ror	r30
 518:	9f 5f       	subi	r25, 0xFF	; 255
 51a:	c1 f7       	brne	.-16     	; 0x50c <__mulsf3_pse+0x8c>
 51c:	fe 2b       	or	r31, r30
 51e:	88 0f       	add	r24, r24
 520:	91 1d       	adc	r25, r1
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	97 f9       	bld	r25, 7
 528:	08 95       	ret

0000052a <__divmodhi4>:
 52a:	97 fb       	bst	r25, 7
 52c:	07 2e       	mov	r0, r23
 52e:	16 f4       	brtc	.+4      	; 0x534 <__divmodhi4+0xa>
 530:	00 94       	com	r0
 532:	06 d0       	rcall	.+12     	; 0x540 <__divmodhi4_neg1>
 534:	77 fd       	sbrc	r23, 7
 536:	08 d0       	rcall	.+16     	; 0x548 <__divmodhi4_neg2>
 538:	0b d0       	rcall	.+22     	; 0x550 <__udivmodhi4>
 53a:	07 fc       	sbrc	r0, 7
 53c:	05 d0       	rcall	.+10     	; 0x548 <__divmodhi4_neg2>
 53e:	3e f4       	brtc	.+14     	; 0x54e <__divmodhi4_exit>

00000540 <__divmodhi4_neg1>:
 540:	90 95       	com	r25
 542:	81 95       	neg	r24
 544:	9f 4f       	sbci	r25, 0xFF	; 255
 546:	08 95       	ret

00000548 <__divmodhi4_neg2>:
 548:	70 95       	com	r23
 54a:	61 95       	neg	r22
 54c:	7f 4f       	sbci	r23, 0xFF	; 255

0000054e <__divmodhi4_exit>:
 54e:	08 95       	ret

00000550 <__udivmodhi4>:
 550:	aa 1b       	sub	r26, r26
 552:	bb 1b       	sub	r27, r27
 554:	51 e1       	ldi	r21, 0x11	; 17
 556:	07 c0       	rjmp	.+14     	; 0x566 <__udivmodhi4_ep>

00000558 <__udivmodhi4_loop>:
 558:	aa 1f       	adc	r26, r26
 55a:	bb 1f       	adc	r27, r27
 55c:	a6 17       	cp	r26, r22
 55e:	b7 07       	cpc	r27, r23
 560:	10 f0       	brcs	.+4      	; 0x566 <__udivmodhi4_ep>
 562:	a6 1b       	sub	r26, r22
 564:	b7 0b       	sbc	r27, r23

00000566 <__udivmodhi4_ep>:
 566:	88 1f       	adc	r24, r24
 568:	99 1f       	adc	r25, r25
 56a:	5a 95       	dec	r21
 56c:	a9 f7       	brne	.-22     	; 0x558 <__udivmodhi4_loop>
 56e:	80 95       	com	r24
 570:	90 95       	com	r25
 572:	bc 01       	movw	r22, r24
 574:	cd 01       	movw	r24, r26
 576:	08 95       	ret

00000578 <_exit>:
 578:	f8 94       	cli

0000057a <__stop_program>:
 57a:	ff cf       	rjmp	.-2      	; 0x57a <__stop_program>
